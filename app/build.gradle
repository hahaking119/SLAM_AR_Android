apply plugin: 'com.android.application'

android {
    namespace 'com.eqgis.slam'
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.eqgis.slam"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11", "-frtti", "-fexceptions"
                cppFlags "-std=c++11 -frtti -fexceptions"
//                arguments "-DANDROID_ABI=armeabi-v7a"
//                arguments "-DANDROID_ABI=arm64-v8a"
                arguments "-DANDROID_ARM_NEON=TRUE"
                arguments  "-DANDROID_TOOLCHAIN=clang"
                arguments  "-DCMAKE_BUILD_TYPE=Release"
                arguments  "-DBUILD_FAT_JAVA_LIBS=TRUE"
                arguments  '-DANDROID_STL=c++_shared'
            }
        }
        ndk {
            abiFilters 'armeabi-v7a','arm64-v8a'/*,'x86'*/
        }
    }

    packagingOptions {
        pickFirst 'lib/armeabi-v7a/libopencv_java4.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
        pickFirst 'lib/arm64-v8a/libopencv_java4.so'
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
    externalNativeBuild {
        cmake {
//            path "CMakeLists.bak"
            path file('src/main/cpp/CMakeLists.txt')
        }
    }

    splits {
        // Configures multiple APKs based on ABI.
        abi {
            // Enables building multiple APKs per ABI.
            enable true
            // By default all ABIs are included, so use reset() and include to specify that we only
            // want APKs for x86 and x86_64.
            // Resets the list of ABIs that Gradle should create APKs for to none.
            reset()
            // Specifies a list of ABIs that Gradle should create APKs for.
            include 'armeabi-v7a','arm64-v8a'
            // Specifies that we do not want to also generate a universal APK that includes all ABIs.
            universalApk true
        }
    }
    sourceSets{
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    ndkVersion '27.0.12077973'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'de.javagl:obj:0.3.0'
    testImplementation 'junit:junit:4.12'
    implementation project(':OpenCVLibrary450')
}
